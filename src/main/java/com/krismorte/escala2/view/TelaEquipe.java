/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.krismorte.escala2.view;

import com.krismorte.escala2.model.Equipe;
import com.krismorte.escala2.model.EquipeHorario;
import com.krismorte.escala2.model.Horario;
import com.krismorte.escala2.service.CrudService;
import com.krismorte.escala2.util.BeanTableModel;
import com.krismorte.escala2.util.MouseEventUtil;
import com.krismorte.escala2.util.MyJTable;
import com.krismorte.escala2.util.ScreenUtil;
import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author c007329
 */
public class TelaEquipe extends javax.swing.JDialog implements ActionListener {

    private CrudService crudService = new CrudService();
    private List<EquipeHorario> equipeHorario = new ArrayList<>();
    private List<Horario> horariosEquipe = new ArrayList<>();
    private List<Equipe> equipes = new ArrayList<>();
    private MyJTable tabelaEquipe;
    private MyJTable tabelaEquipeHorario;

    /**
     * Creates new form TelaEquipe
     */
    public TelaEquipe(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    private void init() {
        /*listaEscolhida.setModel(modelEscolhido);
        listaTotal.setModel(modelTotal);
        horarios.addAll(crudService.listarHorarios());
        for (Horario h : horarios) {
            modelTotal.add(modelTotal.getSize(), h);
        }*/
        equipes = crudService.listarEquipes();
        exibeTabelaHorario();
        exibeTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        btnEscolherHorarios = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        panelHorarios = new javax.swing.JPanel();
        panelEquipes = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Nome:");

        btnSalvar.setText("salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jLabel2.setText("total:");

        btnEscolherHorarios.setText("escolher horários");
        btnEscolherHorarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEscolherHorariosActionPerformed(evt);
            }
        });

        jSplitPane1.setDividerLocation(150);
        jSplitPane1.setDividerSize(20);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        panelHorarios.setBorder(javax.swing.BorderFactory.createTitledBorder("Horários da Equipe"));

        javax.swing.GroupLayout panelHorariosLayout = new javax.swing.GroupLayout(panelHorarios);
        panelHorarios.setLayout(panelHorariosLayout);
        panelHorariosLayout.setHorizontalGroup(
            panelHorariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 659, Short.MAX_VALUE)
        );
        panelHorariosLayout.setVerticalGroup(
            panelHorariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jSplitPane1.setTopComponent(panelHorarios);

        panelEquipes.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout panelEquipesLayout = new javax.swing.GroupLayout(panelEquipes);
        panelEquipes.setLayout(panelEquipesLayout);
        panelEquipesLayout.setHorizontalGroup(
            panelEquipesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 667, Short.MAX_VALUE)
        );
        panelEquipesLayout.setVerticalGroup(
            panelEquipesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 209, Short.MAX_VALUE)
        );

        jSplitPane1.setRightComponent(panelEquipes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSplitPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEscolherHorarios)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEscolherHorarios))
                .addGap(18, 18, 18)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(jLabel2)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (txtNome.getText().equals("") | equipeHorario.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Digite um nome e esolha os horários");
        } else {
            try {
                Equipe equipe = new Equipe();
                equipe.setNome(txtNome.getText());

                crudService.salvarEquipe(equipe, equipeHorario);
                JOptionPane.showMessageDialog(null, "Salvo com sucesso!");
                equipes.add(equipe);
                txtNome.setText("");
                exibeTabela();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnEscolherHorariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEscolherHorariosActionPerformed
        horariosEquipe = ListaHorarios.escolherHorarios();
        exibeTabelaHorario();
    }//GEN-LAST:event_btnEscolherHorariosActionPerformed

    private void exibeTabelaHorario() {
        BeanTableModel<EquipeHorario> modelo = new BeanTableModel<>(EquipeHorario.class);
        modelo.addColumn("horario", "horario");
        modelo.addColumn("vagasSenior", "vagasSenior");
        modelo.addColumn("vagasPleno", "vagasPleno");
        modelo.addColumn("Active", "active");
        //modelo.setColumnEditable(1, true);
        //modelo.setColumnEditable(2, true);
        for (Horario m : horariosEquipe) {
            EquipeHorario epHorario = new EquipeHorario();
            epHorario.setHorario(m);
            epHorario.setActive(true);
            equipeHorario.add(epHorario);
            modelo.addRow(epHorario);
        }

        tabelaEquipeHorario = new MyJTable(modelo);
        tabelaEquipeHorario.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        tabelaEquipeHorario.addMouseListener(new MouseEventUtil(this, false));

        panelHorarios.removeAll();
        panelHorarios.setLayout(new GridLayout(1, 1));

        panelHorarios.add(ScreenUtil.getJScroll(tabelaEquipeHorario), BorderLayout.CENTER);
        panelHorarios.validate();
    }

    private void exibeTabela() {
        BeanTableModel<Equipe> modelo = new BeanTableModel<>(Equipe.class);
        modelo.addColumn("nome", "nome", BeanTableModel.EditMode.EDITABLE);
        modelo.addColumn("Active", "active", BeanTableModel.EditMode.EDITABLE);

        for (Equipe m : equipes) {
            modelo.addRow(m);
        }

        tabelaEquipe = new MyJTable(modelo);
        panelEquipes.removeAll();
        panelEquipes.setLayout(new GridLayout(1, 1));

        panelEquipes.add(ScreenUtil.getJScroll(tabelaEquipe), BorderLayout.CENTER);
        panelEquipes.validate();
        txtTotal.setText("" + equipes.size());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaEquipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaEquipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaEquipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaEquipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaEquipe dialog = new TelaEquipe(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEscolherHorarios;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel panelEquipes;
    private javax.swing.JPanel panelHorarios;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        int[] vagas = VagasSeniorPleno.Vagas();
        int linha = tabelaEquipeHorario.getSelectedRow();
        tabelaEquipeHorario.setValueAt(vagas[0], linha, 1);
        tabelaEquipeHorario.setValueAt(vagas[1], linha, 2);
        for (EquipeHorario eqHorario : equipeHorario) {
            if (tabelaEquipeHorario.getValueAt(linha, 0).equals(eqHorario.getHorario().getDescricao())) {
                eqHorario.setVagasPleno(vagas[1]);
                eqHorario.setVagasSenior(vagas[0]);
                break;
            }
        }
    }
}
